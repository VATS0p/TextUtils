{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\vscode\\\\react\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n// import About from './components/About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [bcolor, setbcolor] = useState('primary');\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Darkmode has been enabled\", \"success \");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\", \"success \");\n    }\n  };\n  const toggleRed = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#910715';\n      showAlert(\"Darkmode has been enabled\", \"success \");\n      setbcolor(\"danger\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\", \"success \");\n      setbcolor(\"primary\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      abouttext: \"About us\",\n      mode: mode,\n      toggleMode: toggleMode,\n      tm: toggleRed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the Text to analyze : \",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IWZ4CYlbuoWEbXR29TSEFJ6ELSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","bcolor","setbcolor","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","toggleRed","children","title","abouttext","tm","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/vscode/react/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React ,{ useState } from 'react';\n// import About from './components/About';\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n  \n  const [bcolor,setbcolor] = useState('primary');\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },1200)\n  }\n  const toggleMode =  () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Darkmode has been enabled\",\"success \")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\",\"success \")\n    }\n    }\n    const toggleRed =  () =>{\n      if(mode === 'light'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#910715';\n        showAlert(\"Darkmode has been enabled\",\"success \")\n        setbcolor(\"danger\")\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Lightmode has been enabled\",\"success \")\n        setbcolor(\"primary\")\n      }\n      }\n  \n  return (\n    <>\n      <Navbar title=\"TextUtils\" abouttext=\"About us\" mode={mode} toggleMode={toggleMode} tm={toggleRed} />\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze : \" mode={mode}/>\n      {/* <About/> */}\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}