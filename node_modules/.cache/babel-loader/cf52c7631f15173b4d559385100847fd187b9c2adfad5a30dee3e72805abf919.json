{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\vscode\\\\react\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport About from './components/About';\nimport { BrowserRouter as Router, RouterProvider, Route, Routes, Link, BrowserRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [bcolor, setbcolor] = useState('primary');\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1200);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Darkmode has been enabled\", \"success \");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\", \"success \");\n    }\n  };\n  const toggleRed = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#910715';\n      showAlert(\"Darkmode has been enabled\", \"success \");\n      setbcolor(\"danger\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\", \"success \");\n      setbcolor(\"primary\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        abouttext: \"About us\",\n        mode: mode,\n        toggleMode: toggleMode,\n        tm: toggleRed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the Text to analyze : \",\n              mode: mode,\n              bcolor: bcolor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"IWZ4CYlbuoWEbXR29TSEFJ6ELSY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Alert","Navbar","TextForm","React","useState","About","BrowserRouter","Router","RouterProvider","Route","Routes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","bcolor","setbcolor","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","toggleRed","children","title","abouttext","tm","fileName","_jsxFileName","lineNumber","columnNumber","className","exact","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/vscode/react/textutils/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React ,{ useState } from 'react';\nimport About from './components/About';\nimport {\n  BrowserRouter as Router,\n  RouterProvider,\n  Route,\n  Routes,\n  Link,\n  BrowserRouter,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n  \n  const [bcolor,setbcolor] = useState('primary');\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },1200)\n  }\n  const toggleMode =  () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Darkmode has been enabled\",\"success \")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\",\"success \")\n    }\n    }\n    const toggleRed =  () =>{\n      if(mode === 'light'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#910715';\n        showAlert(\"Darkmode has been enabled\",\"success \")\n        setbcolor(\"danger\")\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Lightmode has been enabled\",\"success \")\n        setbcolor(\"primary\")\n      }\n      }\n  \n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" abouttext=\"About us\" mode={mode} toggleMode={toggleMode} tm={toggleRed} />\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      <Routes>\n          <Route exact path='/about' element={ <About />}>\n            </Route>\n          <Route exact path='/' element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analyze : \" mode={mode} bcolor={bcolor}/>}> \n\n          </Route>\n        </Routes>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}