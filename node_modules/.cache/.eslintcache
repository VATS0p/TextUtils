[{"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\App.js":"2","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\reportWebVitals.js":"3","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\Navbar.js":"4","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\TextForm.js":"5","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\About.js":"6","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\Alert.js":"7"},{"size":535,"mtime":1683633142727,"results":"8","hashOfConfig":"9"},{"size":2100,"mtime":1684772432219,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1683633142788,"results":"11","hashOfConfig":"9"},{"size":2010,"mtime":1684770168790,"results":"12","hashOfConfig":"9"},{"size":2300,"mtime":1684761401803,"results":"13","hashOfConfig":"9"},{"size":4406,"mtime":1684513824020,"results":"14","hashOfConfig":"9"},{"size":446,"mtime":1684755994657,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"17vd7wc",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\index.js",[],[],[],"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\App.js",["40"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React ,{ useState } from 'react';\nimport About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n  \n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n  \n  const [bcolor,setbcolor] = useState('primary');\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },1200)\n  }\n  const toggleMode =  () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Darkmode has been enabled\",\"success \")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Lightmode has been enabled\",\"success \")\n    }\n    }\n    const toggleRed =  () =>{\n      if(mode === 'light'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#910715';\n        showAlert(\"Darkmode has been enabled\",\"success \")\n        setbcolor(\"danger\")\n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Lightmode has been enabled\",\"success \")\n        setbcolor(\"primary\")\n      }\n      }\n  \n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" abouttext=\"About us\" mode={mode} toggleMode={toggleMode} tm={toggleRed} />\n      <Alert alert={alert}/>\n      <div className='container my-3'>\n      {/* <Routes>\n        <Route exact path=\"/about\" element={<About />} />\n        <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the Text to analyze:\" mode={mode} bcolor={bcolor} />} />\n      </Routes> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze:\" mode={mode} bcolor={bcolor} />\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\reportWebVitals.js",[],[],"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\Navbar.js",["41","42"],[],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.abouttext}</Link> */}\r\n        </li>\r\n        \r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.tm} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheck\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheck\">Enable Red Dark Mode &nbsp;</label>\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\nNavbar.protoType = {\r\n    title : PropTypes.string.isRequired,\r\n    abouttext : PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title : 'Set title here',\r\n    abouttext : 'set karna bhai about us'\r\n}\r\nexport default Navbar;\r\n","C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\TextForm.js",[],[],"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\About.js",[],[],"C:\\Users\\Asus\\Desktop\\vscode\\react\\textutils\\src\\components\\Alert.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":7,"column":8,"nodeType":"45","messageId":"46","endLine":7,"endColumn":13},{"ruleId":"47","severity":1,"message":"48","line":10,"column":5,"nodeType":"49","endLine":10,"endColumn":42},{"ruleId":"47","severity":1,"message":"48","line":17,"column":11,"nodeType":"49","endLine":17,"endColumn":71},"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]